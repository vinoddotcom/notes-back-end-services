# GitHub Actions workflow for backend CI/CD
# Place this file in the backend repository at .github/workflows/deploy.yml

name: Deploy Backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write   # Required for OIDC
  contents: read    # Required to checkout the code

env:
  AWS_REGION: ap-south-1  # Mumbai region
  ECR_REPOSITORY: notes-prod-backend
  ECS_SERVICE: notes-prod-backend
  ECS_CLUSTER: notes-prod-cluster
  CONTAINER_NAME: backend

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Get current task definition
        id: task-def
        run: |
          aws ecs describe-task-definition \
            --task-definition notes-prod-backend \
            --query "taskDefinition" \
            > task-definition.json

      - name: Update task definition
        id: task-def-update
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-update.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

      - name: Run database migrations
        run: |
          aws ecs run-task \
            --cluster ${{ env.ECS_CLUSTER }} \
            --task-definition ${{ steps.task-def-update.outputs.task-definition }} \
            --launch-type FARGATE \
            --network-configuration "awsvpcConfiguration={subnets=[subnet-12345,subnet-67890],securityGroups=[sg-12345],assignPublicIp=DISABLED}" \
            --overrides '{"containerOverrides": [{"name":"backend","command": ["alembic", "upgrade", "head"]}]}' \
            --wait
        env:
          SUBNET_IDS: ${{ secrets.SUBNET_IDS }}
          SECURITY_GROUP_ID: ${{ secrets.SECURITY_GROUP_ID }}
